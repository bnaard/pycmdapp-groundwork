[tool.poetry]
name = "pycmdlineapp-groundwork"
version = "0.1.0"
description = "Startingpoint for any python-based commandline app with configuration, argument-parsing, help and logging prepared."
authors = ["bnaard <bnaard@gmx.net>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7"
pydantic = "^1.8"
click = "^7.1.2"
class-doc = "^0.2.6"
python-dotenv = "^0.15.0"
PyYAML = "^5.4.1"
toml = "^0.10.2"

[tool.poetry.dev-dependencies]
pylint = "^2.6.0"
pytest = "^6.2.1"
pytest-cov = "^2.11.1"
pytest-mock = "^3.5.1"
pdoc3 = "^0.9.2"
pytest-html = "^3.1.1"
pytest-httpserver = "^0.3.8"
mkdocs = "^1.1.2"
mkdocs-material = "^7.0.6"
markdown-include = "^0.6.0"
mkdocs-exclude = "^1.0.2"
mkdocstrings = "^0.15.0"
mike = "^0.6.0"
asciinema = "^2.0.2"
black = "^20.8b1"
mypy = "^0.812"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"
addopts = "--doctest-modules"


[tool.pylint]
max-line-length = 88

[tool.black]
experimental-string-processing = true
line-length = 88
target-version = ['py37']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''